.alert {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 99;
  margin: 1em;
  padding: 2em;
}

.lobby {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("/images/splashbg.png");
  background-size: cover;
  background-repeat: no-repeat;
  .new-game {
    @apply bg-gray-100 text-gray-700 text-lg font-sans font-bold border-4 border-green-400 rounded-full py-3 px-6 my-3 shadow-md;
  }
  @apply text-center text-gray-200 font-sans text-lg p-8 m-0;
}

.lobbygames {
  align-items: center;
  padding: 1em;
}

.lobbygame {
  @apply bg-gray-100 text-gray-700 text-lg font-sans font-bold border-4 border-gray-400 rounded-full py-3 px-6 my-4 shadow-md;
}

.game {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  &.blurred {
    filter: blur(0.25em);
    @apply bg-gradient-to-r from-green-600 via-green-500 to-green-600;
  }
  @apply bg-gradient-to-r from-green-700 via-green-600 to-green-700 text-center;
}

.seat-offering-modal-content {
  @apply rounded-lg bg-gray-100 text-gray-700 text-lg font-sans font-bold border border-green-900 p-6 my-16 mx-auto shadow-md w-6/12 content-center text-center;
}

.sit-button {
  @apply bg-green-700 text-gray-100 text-lg font-sans font-bold border border-transparent rounded-lg py-3 px-16 my-3 shadow-md;
}

.tile {
  max-height: 5em;
}

.largetile {
  max-height: 7em;
}

// new row in flexbox
.line-break {
  width: 100%;
}

.seat {
  position: absolute;
}

.tiles {
  @apply flex flex-row flex-wrap-reverse text-center justify-center;
}

.seat-0 {
  bottom: 0;
  left: 0;
  .tile.concealed, .tile.exposed {
    @apply largetile;
  }
}

.seat-1 {
  top: 0;
  right: 0;
  width: 100vh;
  .tiles {
    transform: rotate(-90deg) translate(0, -100%);
    transform-origin: top right;
  }
}

.seat-2 {
  top: 0;
  left: 0;
  width: 100%;
  .tiles {
    transform: rotate(180deg);
  }
}

.seat-3 {
  top: 0;
  left: 0;
  width: 100vh;
  .tiles {
    transform: rotate(90deg) translate(0, -100%);
    transform-origin: top left;
  }
}

.wall-2 {
  position: relative;
  top: 4.7em;
  left: -0.1em;
}

.stick {
  position: fixed;
  left: 50%;
  transform: translate(-50%, 65%);
  max-height: 28em;
}

.rollhand {
  font-size: 7em;
}

.dice {
  display: block;
  margin-left: 26em; //for animation
}

.die {
  display: inline-block;
  font-size: 7em;
  margin: 0em 0.05em 0em 0.05em;

  &.rolling_for_deal {
    animation: dieanimation-1 1s linear;
  }
  &.discarding {
    animation: dieanimation-2 1s linear;
  }
}

// identical animations are needed for each game state because otherwise it
// won't reanimate on update
@keyframes dieanimation-1 {
  0% { transform: translate(-3em, -1em) rotate(0deg); }
  45% { transform: translate(-1em, 0) rotate(450deg); }
  90% { transform: translate(-0.1em, 0) rotate(720deg); }
  100% { transform: translate(0, 0) rotate(720deg); }
}
@keyframes dieanimation-2 {
  0% { transform: translate(-3em, -1em) rotate(0deg); }
  45% { transform: translate(-1em, 0) rotate(450deg); }
  90% { transform: translate(-0.1em, 0) rotate(720deg); }
  100% { transform: translate(0, 0) rotate(720deg); }
}

.rollable-dice {
  cursor: pointer;
}

.unrollable-dice {
  cursor: default;
}

.windpick {
  .tile {
    @apply largetile;
  }
  .wind_and_player {
    display: inline-block;
    padding: 1em 0em 1em 1em;
  }
  .player_name {
    display: inline-block;
    text-align: center;
    width: 100%;
    padding-top: 0.5em;
  }
  .unknown-wind {
    cursor: pointer;
  }
  @apply text-gray-800 text-xl font-sans font-bold;
}
